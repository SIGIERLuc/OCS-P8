describe("controller",function(){"use strict";var e,t,o,i=function(e){t.read.and.callFake(function(t,o){(o=o||t)(e)}),t.getCount.and.callFake(function(t){t({active:e.filter(function(e){return!e.completed}).length,completed:e.filter(function(e){return!!e.completed}).length,total:e.length})}),t.remove.and.callFake(function(e,t){t()}),t.create.and.callFake(function(e,t){t()}),t.update.and.callFake(function(e,t,o){o()})};window.qs=function(e,t){return(t||document).querySelector(e)},beforeEach(function(){var i;t=jasmine.createSpyObj("model",["read","getCount","remove","create","update"]),i={},o={render:jasmine.createSpy("render"),bind:function(e,t){i[e]=t},trigger:function(e,t){i[e](t)}},e=new app.Controller(t,o)}),it("should call the render on start-up",function(){i([]),e.setView(""),expect(o.render).toHaveBeenCalledWith("showEntries",[])}),describe("routing",function(){it("should show all entries without a route",function(){var t={title:"my todo"};i([t]),e.setView(""),expect(o.render).toHaveBeenCalledWith("showEntries",[t])}),it('should show all entries without "all" route',function(){var t={title:"my todo"};i([t]),e.setView("#/"),expect(o.render).toHaveBeenCalledWith("showEntries",[t])}),it("should show active entries",function(){var n={title:"my todo",completed:!1};i([n]),e.setView("/active"),expect(t.read).toHaveBeenCalledWith({completed:!1},jasmine.any(Function)),expect(o.render).toHaveBeenCalledWith("showEntries",[n])}),it("should show completed entries",function(){var n={title:"my todo",completed:!0};i([n]),e.setView("/completed"),expect(t.read).toHaveBeenCalledWith({completed:!0},jasmine.any(Function)),expect(o.render).toHaveBeenCalledWith("showEntries",[n])})}),it("should show the content block when todos exists",function(){i([{title:"my todo",completed:!0}]),e.setView(""),expect(o.render).toHaveBeenCalledWith("contentBlockVisibility",{visible:!0})}),it("should hide the content block when no todos exists",function(){i([]),e.setView(""),expect(o.render).toHaveBeenCalledWith("contentBlockVisibility",{visible:!1})}),it("should check the toggle all button, if all todos are completed",function(){i([{title:"my todo",completed:!0}]),e.setView(""),expect(o.render).toHaveBeenCalledWith("toggleAll",{checked:!0})}),it('should set the "clear completed" button',function(){i([{id:42,title:"my todo",completed:!0}]),e.setView(""),expect(o.render).toHaveBeenCalledWith("clearCompletedButton",{completed:1,visible:!0})}),it('should highlight "All" filter by default',function(){i([]),e.setView(""),expect(o.render).toHaveBeenCalledWith("setFilter","")}),it('should highlight "Active" filter when switching to active view',function(){i([]),e.setView("/active"),expect(o.render).toHaveBeenCalledWith("setFilter","active")}),it('should highlight "Completed" filter when switching to completed view',function(){i([]),e.setView("/completed"),expect(o.render).toHaveBeenCalledWith("setFilter","completed")}),describe("toggle all",function(){it("should toggle all todos to completed",function(){i([{id:42,title:"my todo",completed:!1},{id:54,title:"my todo",completed:!1},{id:685,title:"my todo",completed:!1}]),e.setView(""),o.trigger("toggleAll",{completed:!0}),expect(t.update).toHaveBeenCalledWith(42,{completed:!0},jasmine.any(Function)),expect(t.update).toHaveBeenCalledWith(54,{completed:!0},jasmine.any(Function)),expect(t.update).toHaveBeenCalledWith(685,{completed:!0},jasmine.any(Function))}),it("should update the view",function(){i([{id:42,title:"my todo",completed:!1}]),e.setView(""),o.trigger("toggleAll",{completed:!0}),expect(o.render).toHaveBeenCalledWith("elementComplete",{id:42,completed:!0}),expect(t.update).toHaveBeenCalledWith(42,{completed:!0},jasmine.any(Function))})}),describe("new todo",function(){it("should add a new todo to the model",function(){i([]),e.setView(""),o.trigger("newTodo","new todo"),expect(t.create).toHaveBeenCalledWith("new todo",jasmine.any(Function))}),it("should add a new todo to the view",function(){i([]),e.setView(""),o.render.calls.reset(),t.read.calls.reset(),t.read.and.callFake(function(e){e([{title:"a new todo",completed:!1}])}),o.trigger("newTodo","a new todo"),expect(t.read).toHaveBeenCalled(),expect(o.render).toHaveBeenCalledWith("showEntries",[{title:"a new todo",completed:!1}])}),it("should clear the input field when a new todo is added",function(){i([]),e.setView(""),o.trigger("newTodo","a new todo"),expect(o.render).toHaveBeenCalledWith("clearNewTodo")})}),describe("element removal",function(){it("should remove an entry from the model",function(){i([{id:352,title:"my todo",completed:!0}]),e.setView(""),o.trigger("itemRemove",{id:352}),expect(t.remove).toHaveBeenCalledWith(352,jasmine.any(Function))}),it("should remove an entry from the view",function(){i([{id:42,title:"my todo",completed:!0}]),e.setView(""),o.trigger("itemRemove",{id:42}),expect(o.render).toHaveBeenCalledWith("removeItem",42)}),it("should update the element count",function(){i([{id:42,title:"my todo",completed:!0}]),e.setView(""),o.trigger("itemRemove",{id:42}),expect(o.render).toHaveBeenCalledWith("updateElementCount",0)})}),describe("remove completed",function(){it("should remove a completed entry from the model",function(){i([{id:42,title:"my todo",completed:!0}]),e.setView(""),o.trigger("removeCompleted"),expect(t.read).toHaveBeenCalledWith({completed:!0},jasmine.any(Function)),expect(t.remove).toHaveBeenCalledWith(42,jasmine.any(Function))}),it("should remove a completed entry from the view",function(){i([{id:42,title:"my todo",completed:!0}]),e.setView(""),o.trigger("removeCompleted"),expect(o.render).toHaveBeenCalledWith("removeItem",42)})}),describe("element complete toggle",function(){it("should update the model",function(){i([{id:21,title:"my todo",completed:!1}]),e.setView(""),o.trigger("itemToggle",{id:21,completed:!0}),expect(t.update).toHaveBeenCalledWith(21,{completed:!0},jasmine.any(Function))}),it("should update the view",function(){i([{id:42,title:"my todo",completed:!0}]),e.setView(""),o.trigger("itemToggle",{id:42,completed:!1}),expect(o.render).toHaveBeenCalledWith("elementComplete",{id:42,completed:!1})})}),describe("edit item",function(){it("should switch to edit mode",function(){i([{id:21,title:"my todo",completed:!1}]),e.setView(""),o.trigger("itemEdit",{id:21}),expect(o.render).toHaveBeenCalledWith("editItem",{id:21,title:"my todo"})}),it("should leave edit mode on done",function(){i([{id:21,title:"my todo",completed:!1}]),e.setView(""),o.trigger("itemEditDone",{id:21,title:"new title"}),expect(o.render).toHaveBeenCalledWith("editItemDone",{id:21,title:"new title"})}),it("should persist the changes on done",function(){i([{id:21,title:"my todo",completed:!1}]),e.setView(""),o.trigger("itemEditDone",{id:21,title:"new title"}),expect(t.update).toHaveBeenCalledWith(21,{title:"new title"},jasmine.any(Function))}),it("should remove the element from the model when persisting an empty title",function(){i([{id:21,title:"my todo",completed:!1}]),e.setView(""),o.trigger("itemEditDone",{id:21,title:""}),expect(t.remove).toHaveBeenCalledWith(21,jasmine.any(Function))}),it("should remove the element from the view when persisting an empty title",function(){i([{id:21,title:"my todo",completed:!1}]),e.setView(""),o.trigger("itemEditDone",{id:21,title:""}),expect(o.render).toHaveBeenCalledWith("removeItem",21)}),it("should leave edit mode on cancel",function(){i([{id:21,title:"my todo",completed:!1}]),e.setView(""),o.trigger("itemEditCancel",{id:21}),expect(o.render).toHaveBeenCalledWith("editItemDone",{id:21,title:"my todo"})}),it("should not persist the changes on cancel",function(){i([{id:21,title:"my todo",completed:!1}]),e.setView(""),o.trigger("itemEditCancel",{id:21}),expect(t.update).not.toHaveBeenCalled()})})});